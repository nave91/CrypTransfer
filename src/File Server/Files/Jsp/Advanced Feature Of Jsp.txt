Java is an object-oriented programming language developed by James Gosling and colleagues at Sun Microsystems in the early 1990s. Unlike conventional languages which are generally designed either to be compiled to native (machine) code, or to be interpreted from source code at runtime, Java is intended to be compiled to a bytecode (though it can be compiled to native code with gcj), which is then run (generally using JIT compilation) by a Java virtual machine.

The language itself borrows much syntax from C and C++ but has a simpler object model and fewer low-level facilities.

Java is not related to JavaScript, though they have similar names and share a C-like syntax.

<h1>History</h1>

Java was started as a project called "Oak" by James Gosling in June 1991. Gosling's goals were to implement a virtual machine and a language that had a familiar C-like notation but with greater uniformity and simplicity than C/C++. The first public implementation was Java 1.0 in 1995. It made the promise of "Write Once, Run Anywhere" (WORA), with free runtimes on popular platforms. It was fairly secure and its security was configurable, allowing for network and file access to be limited. The major web browsers soon incorporated it into their standard configurations in a secure "applet" configuration. It became popular quickly. New versions for large and small platforms (J2EE and J2ME) soon were designed with the advent of "Java 2".

In 1997, Sun approached the ISO/IEC JTC1 standards body and later the Ecma International to formalize Java, but it soon withdrew from the process.[1][2][3] Java remains a proprietary de facto standard that is controlled through the Java Community Process [4]. Sun makes most of its Java implementations available without charge, with revenue being generated by specialized products such as the Java Enterprise System. Sun distinguishes between its Software Development Kit (SDK) and Runtime Environment (JRE) which is a subset of the SDK, the primary distinction being that in the JRE the compiler is not present.

JavaServer Pages technology provides a simplified fast way to create dynamic web content JSP technology enables rapid development of web-based applications that are server
It is plotform Independent
JSP is a technology that combines HTML and XML markup languages 
In jsp there is no interface
Java Server Pages includes scripplets of Servletcode in an Html page
<font color="green">www.onjava.com</font>