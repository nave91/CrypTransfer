Object-Oriented (OO) Language:
In PO programs the data is freely moving around the system and due to which there are chances of problem in system. So this problem is overcome by OO programs.OO concepts says it think about data and bind that data and methods those are manipulating that data into one entity known as object and then utilize that object into system. 

Example: C++, Java, C#, VB.Net etc. 

There are some fundamental concepts of OO Language which a language has to follow to be a truly OO language. 

• OBJECT
• CLASS
• ABSTRACTION
• ENCAPSULATION
• DATA HIDING / INFORMATION HIDING
• INHERITANCE
• POLYMORPHISM


Lets take a brief look into these concepts. 

<h1>Objects</h1>
Object represent real world entity into a program. for example an employee which is real world entity we can make an object of it and then utilize it in a program with its behaviors and actions.
Some other common definitions
1. Object is an instance of a class.
2. Object is a variable of user defined type / abstract data type.

<h1>Class</h1>
Class represent template for an object. It actually contains data and there behavior / methods in it and for utilization of it we need to create an object of that particular class. we can create n number of object with one class.
Some other common definitions 
1. A collection of data and code to handle that data.
2. Class is a user defined type / abstract data type.
3. Class defines basic layout and functionality of an object.
<h1>Encapsulation</h1>
 Wrapping up of data and methods in to a single unit is called as encapsulation.

<h1>Abstraction</h1>Abstraction is a way to remove the association of the behavior of an object with the actual details behind the scenes which implement that object's behavior.

This 'abstraction' is usually accomplished through the use of base classes with virtual functions; each derived function provides the details that implement the behavior behind that abstraction.

A simple example is using a base class "Animal", with a virtual function "Walk". In the case two-legged versus four-legged animals, both of them walk, but the actual mechanics are different. The "Walk" method abstracts the actual mechanics behind the walking that each "Animal" does.


<h1>Inheritence</h1>
Process of Aquiring properties from one object to another without changes.Inheritance is a beautiful thing...
Say you have a tank car, a box car, a caboose, and a flat car.
Normally, in each class definition, you would have to define every local variable and member function for all of those, right?
Well, say you have a class called "railroad car." You can put in variables like "age" or "wear" or functions like "destination." 
Now if you declare your tank car, box car, flat car, and caboose classes as members of the "railroad_car" class, each of those defined classes inherit the "wear," "age," and "destination" variables and functions.


<h1>Polymorphism</h1>
Object Oriented Programming (abbreviated OOP) is a design philosophy. Instead of thinking of a program as a collection of functions it is thought of as a collection of objects. Each of these objects contain "methods" it uses to accomplish a task. Objects derived from a parent class inherit the methods of the parent class. However, if necessary they can make their own object specific implementation of a particular method and they can implement new ones if necessary.

<font color="green">www.JavaQuestions.com</font>