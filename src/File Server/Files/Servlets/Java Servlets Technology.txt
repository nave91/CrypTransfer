All user interaction is by means of Java Servlets. These are small java programs that run on the server side of a web server/web client connection. The servlets employed here use the same HTTP communications standard that ordinary static web pages use to communicate with the client's web browser, so from the point of view of the browser, web pages produced by servlets look no different from ordinary static HTML pages.
<h1>About Java Servlets</h1>
JavaTM servlets are small, platform-independent Java programs that can be used to extend the functionality of a Web server in a variety of ways. Servlets are to the server what applets are to the client - small Java programs compiled to bytecode that can be loaded dynamically and that extend the capabilities of the host.

Servlets differ from applets in that servlets do not run in a Web browser or with a graphical user interface. Instead, servlets interact with the servlet engine running on the Web server through requests and responses. The request-response paradigm is modeled on the behavior of the HyperText Transfer Protocol (HTTP).

A client program, which could be a Web browser or some other program that can make connections across the Internet, accesses a Web server and makes a request. This request is processed by the servlet engine that runs with the Web server, which returns a response to a servlet. The servlet in turn sends a response in HTTP form to the client.

From the point of view of the client, the dynamic HTML generated by a servlet is indistinguishable from static HTML pages.

In functionality, servlets lie somewhere between Common Gateway Interface (CGI) programs and proprietary server extensions such as the Netscape Server API (NSAPI). Unlike CGI programs and NSAPI modules, you do not need to modify servlets to be specific to either a platform or a server.

<h1>Servlet Server</h1>
Just as regular web pages are "served" by a web server application, servlets are also provided to the client via a web server. This can be the same web server as is used for static pages (as is the case with Sun's Java Web Server), or an entirely different product that runs on either the same or a different server (such as JRun).

The user of the system first browses through static web pages, which act as a navigation guide to the various parts of the system (much like menus in legacy systems). The user then clicks a link which refers to a servlet, and some action takes place as a result of the link being activated.

Normally, this will be a form being presented to the user, or some confirmation that a request has been handled. For more time-consuming functions, however, the system has a job queue. Longer requests are queued in this job queue, and handled in background on the server. The user is then usually notified when the job completes via e-mail.

<h1>Servlet Advantages</h1>
Servlets have the following advantages over other common server extension mechanisms:

They are faster than CGI scripts because they use a different process model.  
They use a standard API that is supported by many Web servers.  
They have all of the advantages of the Java language, including ease of development and platform independence.  
They can access the large set of APIs available for the Java platform (Database access, email, directory servers, CORBA, RMI, Enterprise JavaBeans and others). 


Interface defining methods that all servlets implement
Servlet specification is a standard
Good support for security and  data base access
<font color="green">www.java.sun.com</font>